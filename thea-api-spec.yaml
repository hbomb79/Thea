openapi: 3.0.0
info:
  title: Thea Spec
  description: "Thea REST API spec. See http://github.com/hbomb79/Thea for more information"
  version: 1.0.0
  contact:
    name: Thea Support
    url: https://github.com/hbomb79/Thea
tags:
  - name: target
    description: A transcode target, typically associatted with transcode tasks and workflows
  - name: workflow
    description: A Thea workflow is a collection of targets and conditions which are used to automatically perform transcodes
  - name: transcodeTasks
    description: Ongoing or completed tasks which transcoded media
  - name: ingest
    description: Ongoing tasks which represent the ingestion of media in to Thea
  - name: media
    description: Media (movies/series/seasons/episodes) that Thea is tracking
paths:
  /media/latest/:
    get:
      summary: List Latest Media
      description: Allows a client to fetch a list of recently added/updated movies and tv series.
      operationId: listLatestMedia
      tags:
        - media
      responses:
        "200":
          description: List of latest tv series/movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MediaStub"
  /media/movie/:
    get:
      summary: List Movies
      description: Returns a list of all known movies as a stubbed DTO. Full versions of the movie must be retrieved using the /media/movie/:id endpoint
      operationId: listMovie
      tags:
        - media
      responses:
        "200":
          description: List of movies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovieStub"
  /media/series/:
    get:
      summary: List Series
      description: Returns a list of all known series as a stubbed DTO. Full versions of the series must be retrieved using the /media/series/:id endpoint
      operationId: listSeries
      tags:
        - media
      responses:
        "200":
          description: List of series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SeriesStub"


  /media/movie/{id}/:
    get:
      summary: Get Movie
      description: Returns the fully inflated DTO for this movie
      operationId: getMovie
      tags:
        - media
      responses:
        "200":
          description: Movie
          content:
            application/json:
              schema:
                type: arraIngestTasky
                items:
                  $ref: "#/components/schemas/Movie"
    delete:
      summary: Deletes Movie
      description: Deletes the movie and all it's related transcodes. Any on-going transcodes will be cancelled first.
      operationId: deleteMovie
      tags:
        - media
      responses:
        "201":
          description: Succesfully queued deletion of movie and related transcodes

  /media/series/{id}/:
    get:
      summary: Get Series
      description: Returns the fully inflated DTO for this series (which contains the seasons, which further contain their episode stubs)
      operationId: getSeries
      tags:
        - media
      responses:
        "200":
          description: Series containing all seasons (and their episode stubs)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Series"
    delete:
      summary: Deletes Series
      description: Deletes the series and ALL it's seasons and episodes, including any related transcodes. Any on-going transcodes for the episodes contianed within will be cancelled first.
      operationId: deleteSeries
      tags:
        - media
      responses:
        "201":
          description: Succesfully queued deletion of series/seasons/episodes and related transcodes

  /media/episode/{id}/:
    delete:
      summary: Deletes Episode
      description: Deletes the episode specified, any related transcodes, and cancels any ongoing transcodes for this episode
      operationId: deleteEpisode
      tags:
        - media
      responses:
        "201":
          description: Successfully queued deletion of episode and related transcodes

  /ingests:
    get:
      summary: List Ingests
      description: Returns all active/troubled ingests
      operationId: listIngests
      tags:
        - ingest
      responses:
        "200":
          description: List of ingests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/IngestTask"
  /ingests/{id}:
    get:
      summary: Get
      description: Returns the ingest with the ID provided
      operationId: getIngest
      tags:
        - ingest
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The ingest, if found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IngestTask"
    delete:
      summary: Delete
      description: Deletes the trouble with the ID provided
      operationId: deleteIngest
      tags:
        - ingest
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Delete successful
  /ingests/{id}/trouble-resolution:
    post:
      summary: Resolve Trouble
      description: Resolves the trouble with the ID provided
      operationId: resolveIngest
      tags:
        - ingest
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Resolution successful

  /ingests/poll:
    post:
      summary: Poll
      description: Requests Ingest Service to re-poll the file system for new files which need to be ingested
      operationId: pollIngests
      tags:
        - ingest
      responses:
        "200":
          description: Acknowledged

  /transcodes:
    post:
      summary: Create a new transcode task
      description: Creates a new task
      operationId: createTask
      tags:
        - transcodeTasks
      requestBody:
        $ref: "#/components/requestBodies/CreateTranscodeTask"
      responses:
        "201":
          description: Creation successful
  /transcodes/active:
    get:
      summary: List Active Tasks
      description: Returns all active tasks
      operationId: listActiveTasks
      tags:
        - transcodeTasks
      responses:
        "200":
          description: List of active tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TranscodeTask"
  /transcodes/complete:
    get:
      summary: List Completed Tasks
      description: Returns all completed tasks
      operationId: listCompleteTasks
      tags:
        - transcodeTasks
      responses:
        "200":
          description: List of complete tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TranscodeTask"
  /transcodes/{id}:
    get:
      summary: Get Transcode Task
      description: Return matching task, whether active or completed
      operationId: getTask
      tags:
        - transcodeTasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Complete or active transcode task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TranscodeTask"
    delete:
      summary: Delete Task
      description: Deletes matching task. Cancells it if active, and cleans up transcoded media if completed.
      operationId: deleteTask
      tags:
        - transcodeTasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete successful
  /transcodes/{id}/pause:
    post:
      summary: Pause Task
      description: Pauses an ffmpeg task, halting it's progress
      operationId: pauseTask
      tags:
        - transcodeTasks
      responses:
        "200":
          description: Paused
  /transcodes/{id}/resume:
    post:
      summary: Resume Task
      description: Resumes an already paused ffmpeg task
      operationId: resumeTask
      tags:
        - transcodeTasks
      responses:
        "200":
          description: Resumed

  /transcode-workflows:
    get:
      summary: List Workflows
      description: Returns all workflows
      operationId: listWorkflows
      tags:
        - workflow
      responses:
        "200":
          description: List of workflows
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Workflow"

    post:
      summary: Create Workflow
      description: Creates a new workflow
      operationId: createWorkflow
      tags:
        - workflow
      requestBody:
        $ref: "#/components/requestBodies/CreateWorkflow"
      responses:
        "201":
          description: Creation successful
  /transcode-workflows/{id}:
    get:
      summary: Get Workflow
      description: Return matching workflow
      operationId: getWorkflow
      tags:
        - workflow
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Workflow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
    patch:
      summary: Update Workflow
      description: Updates the matching workflow
      operationId: updateWorkflow
      tags:
        - workflow
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The updated workflow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Workflow"
    delete:
      summary: Delete Workflow
      description: Deletes matching workflow
      operationId: deleteWorkflow
      tags:
        - workflow
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete successful

  /transcode-targets:
    get:
      tags:
        - target
      summary: List Targets
      description: Returns all known targets
      operationId: listTargets
      responses:
        "200":
          description: A list of the targets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Target"
    post:
      tags:
        - target
      summary: Create Target
      description: Creates a new target
      operationId: createTarget
      requestBody:
        $ref: "#/components/requestBodies/CreateTarget"
      responses:
        "201":
          description: The created target
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Target"
        "400":
          description: Invalid request
  /transcode-targets/{id}:
    get:
      tags:
        - target
      summary: Get Target
      description: Fetches the target with the ID specified
      operationId: getTarget
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The target
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Target"
        "400":
          description: Invalid request
    patch:
      tags:
        - target
      summary: Update Target
      description: Updates the target specified using the ID
      operationId: updateTarget
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UpdateTarget"
      responses:
        "200":
          description: The updated target
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Target"
        "400":
          description: Invalid request
    delete:
      tags:
        - target
      summary: Delete Target
      description: Delete the target specified using the ID
      operationId: deleteTarget
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Delete success
        "400":
          description: Invalid request
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080/api/thea/v1
components:
  requestBodies:
    CreateTranscodeTask:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateTranscodeTask"
    CreateWorkflow:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateWorkflow"
    UpdateTarget:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateTarget"
    CreateTarget:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateTarget"
  schemas:
    IngestTask:
      type: object

    MediaStub:
      type: object
    MovieStub:
      type: object
    SeriesStub:
      type: object
    Series:
      type: object
    Movie:
      type: object

    CreateTranscodeTask:
      type: object
    TranscodeTask:
      type: object

    CreateWorkflow:
      type: object
    Workflow:
      type: object

    CreateTarget:
      type: object
      properties:
        label:
          type: string
          nullable: false
        ffmpeg_options:
          type: object
          nullable: false
    UpdateTarget:
      type: object
      properties:
        label:
          type: string
          nullable: true
        ffmpeg_options:
          type: object
          nullable: true
    Target:
      type: object
